version: '3'
services:
  app:
    build:
      context: .
    env_file:
      - ./environments/db.env
    command: bundle exec puma -C config/puma.rb
    stdin_open: true
    tty: true
    volumes:
      - .:/ec_site_on_rails
      - public-data:/ec_site_on_rails/public
      - tmp-data:/ec_site_on_rails/tmp
      - log-data:/ec_site_on_rails/log
    depends_on:
      - db
      - mongodb
    links:
      - redis:redis
      - datadog:datadog
    environment:
      - REDIS_URL=redis://redis:6379
      - MYSQL_HOST=db
  db:
    image: mysql:5.7
    command: mysqld --character-set-server=utf8
    # env_file:
    #   - ./environments/db.env
    environment:
      MYSQL_DATABASE: ec_site_on_rails_development
      MYSQL_ROOT_PASSWORD: password
      MYSQL_USER: user
      MYSQL_PASSWORD: password
    ports:
      - "3306:3306"
    volumes:
      - db-data:/var/lib/mysql
  mongodb:
    image: mongo:latest
    container_name: mongodb
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: password
    ports:
      - 27017:27017
    volumes:
      -  'mongodb-data:/data/db'
    # command: mongod --smallfiles
  mongo-express:
    container_name: mongo-express
    image: mongo-express
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: password
    links:
      - 'mongodb:mongo'
  web:
    build:
      context: containers/nginx
    stdin_open: true
    tty: true
    volumes:
      - public-data:/ec_site_on_rails/public
      - tmp-data:/ec_site_on_rails/tmp
      # - ./nginx/config/nginx.conf:/etc/nginx/nginx.conf
      # - ./nginx/log:/var/log/nginx
      # - ./nginx/html:/usr/share/nginx/html
    ports:
      - 3000:3000
    depends_on:
      - app
    # links:
    #   - fluentd
    logging:
      driver: fluentd
      options:
        tag: "nginx"
        fluentd-async-connect: "true"
  redis:
    image: redis:2.8.13
    ports:
      - "6379:6379"
  # datadog
  datadog:
    image: datadog/docker-dd-agent
    environment:
     - API_KEY=73f3bb547172c89be0bcdab01faff700
     - DD_APM_ENABLED=true
     - SD_BACKEND=docker
    volumes:
     - /var/run/docker.sock:/var/run/docker.sock:ro
     - /proc/:/host/proc/:ro
     - /sys/fs/cgroup:/host/sys/fs/cgroup:ro
  # fluentd
  # fluentd:
  #   build: ./fluentd
  #   volumes:
  #     - ./fluentd/config:/fluentd/etc
  #     - ./nginx/log:/var/log/nginx
  #   links:
  #     - elasticsearch
  #   ports:
  #     - "24224:24224"
  #   depends_on:
  #     - elasticsearch
  # elasticsearch
  elasticsearch:
    build: elasticsearch
    environment:
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ports:
      - "9200:9200"
      - "9300:9300"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - esdata:/usr/share/elasticsearch/data
  # kibana
  kibana:
    build: kibana
    ports:
      - "5601:5601"
    links:
      - elasticsearch:elasticsearch
volumes:
  public-data:
  tmp-data:
  log-data:
  db-data:
  esdata:
  mongodb-data: {}
